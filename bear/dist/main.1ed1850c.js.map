{"version":3,"sources":["src/main.js"],"names":["fileInput","document","querySelector","beforeTable","createElement","border","cellSpacing","style","marginTop","display","classList","add","afterTable","checkbox","exportResultTableBtn","renderTable","xlsxReader","Strings","forEach","el","t","beforeTr","beforeTd","textContent","appendChild","splitedStr","split","ru","en","word","test","length","push","ruPhrase","join","enPhrase","tr","ruTd","enTd","body","addEventListener","e","querySelectorAll","table","remove","files","target","file","fileReader","FileReader","onload","data","result","XLSX","read","type","readAsBinaryString","checked","wb","utils","table_to_book","sheet","writeFile"],"mappings":";AAAA,IAAMA,EAAYC,SAASC,cAAc,SAEnCC,EAAcF,SAASG,cAAc,SAC3CD,EAAYE,OAAS,EACrBF,EAAYG,YAAc,EAC1BH,EAAYI,MAAMC,UAAY,OAC9BL,EAAYI,MAAME,QAAU,OAC5BN,EAAYO,UAAUC,IAAI,gBAE1B,IAAMC,EAAaX,SAASG,cAAc,SAC1CQ,EAAWP,OAAS,EACpBO,EAAWN,YAAc,EACzBM,EAAWL,MAAMC,UAAY,OAE7B,IAAMK,EAAWZ,SAASC,cAAc,aAClCY,EAAuBb,SAASC,cAAc,WAEpD,SAASa,EAAYC,GACnBA,EAAWC,QAAQC,QAAQ,SAACC,GACtBA,GAAS,SAATA,EAAGC,GAAyB,KAATD,EAAGC,EAAU,CAC5BC,IAAAA,EAAWpB,SAASG,cAAc,MAClCkB,EAAWrB,SAASG,cAAc,MACxCkB,EAASC,YAAcJ,EAAGC,EAC1BC,EAASG,YAAYF,GACrBnB,EAAYqB,YAAYH,GAElBI,IAAAA,EAAaN,EAAGC,EAAEM,MAAM,KACxBC,EAAK,GACLC,EAAK,GACXH,EAAWP,QAAQ,SAACW,GACd,QAAQC,KAAKD,IAAUD,EAAGG,OAAS,GAAK,KAAKD,KAAKD,GACpDD,EAAGI,KAAKH,GAERF,EAAGK,KAAKH,KAGNI,IAAAA,EAAWN,EAAGO,KAAK,KACnBC,EAAWP,EAAGM,KAAK,KACnBE,EAAKnC,SAASG,cAAc,MAC5BiC,EAAOpC,SAASG,cAAc,MAC9BkC,EAAOrC,SAASG,cAAc,MACpCiC,EAAKd,YAAcU,EACnBK,EAAKf,YAAcY,EACnBC,EAAGZ,YAAYa,GACfD,EAAGZ,YAAYc,GACf1B,EAAWY,YAAYY,MAI3BnC,SAASsC,KAAKf,YAAYrB,GAC1BF,SAASsC,KAAKf,YAAYZ,GAC1BE,EAAqBP,MAAME,QAAU,QAGvCT,EAAUwC,iBAAiB,SAAU,SAACC,GAClBxC,SAASyC,iBAAiB,SAClCxB,QAAQ,SAACyB,GAAUA,OAAAA,EAAMC,WAE7BC,IAAAA,EAAQJ,EAAEK,OAAOD,MACnBA,GAAAA,EAAM,GAAI,CACNE,IAAAA,EAAOF,EAAM,GACbG,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAACT,GACbU,IAAAA,EAAOV,EAAEK,OAAOM,OAEtBrC,EADyBsC,KAAKC,KAAKH,EAAM,CAAEI,KAAM,aAInDP,EAAWQ,mBAAmBT,MAIlClC,EAAS2B,iBAAiB,SAAU,SAACC,GAC/BA,EAAEK,OAAOW,QACXtD,EAAYI,MAAME,QAAU,QAE5BN,EAAYI,MAAME,QAAU,SAIhCK,EAAqB0B,iBAAiB,QAAS,WACzCkB,IAAAA,EAAKL,KAAKM,MAAMC,cAAchD,EAAY,CAAEiD,MAAO,WACvDR,KAAKS,UAAUJ,EAAI","file":"main.1ed1850c.js","sourceRoot":"..","sourcesContent":["const fileInput = document.querySelector(\".file\");\n\nconst beforeTable = document.createElement(\"table\");\nbeforeTable.border = 1;\nbeforeTable.cellSpacing = 0;\nbeforeTable.style.marginTop = \"20px\";\nbeforeTable.style.display = \"none\";\nbeforeTable.classList.add(\"before-table\");\n\nconst afterTable = document.createElement(\"table\");\nafterTable.border = 1;\nafterTable.cellSpacing = 0;\nafterTable.style.marginTop = \"20px\";\n\nconst checkbox = document.querySelector(\".checkbox\");\nconst exportResultTableBtn = document.querySelector(\".export\");\n\nfunction renderTable(xlsxReader) {\n  xlsxReader.Strings.forEach((el) => {\n    if (el.t !== \"Link\" && el.t !== \"\") {\n      const beforeTr = document.createElement(\"tr\");\n      const beforeTd = document.createElement(\"td\");\n      beforeTd.textContent = el.t;\n      beforeTr.appendChild(beforeTd);\n      beforeTable.appendChild(beforeTr);\n\n      const splitedStr = el.t.split(\" \");\n      const ru = [];\n      const en = [];\n      splitedStr.forEach((word) => {\n        if (/[A-z]/.test(word) || (en.length > 0 && /\\d/.test(word))) {\n          en.push(word);\n        } else {\n          ru.push(word);\n        }\n      });\n      const ruPhrase = ru.join(\" \");\n      const enPhrase = en.join(\" \");\n      const tr = document.createElement(\"tr\");\n      const ruTd = document.createElement(\"td\");\n      const enTd = document.createElement(\"td\");\n      ruTd.textContent = ruPhrase;\n      enTd.textContent = enPhrase;\n      tr.appendChild(ruTd);\n      tr.appendChild(enTd);\n      afterTable.appendChild(tr);\n    }\n  });\n\n  document.body.appendChild(beforeTable);\n  document.body.appendChild(afterTable);\n  exportResultTableBtn.style.display = \"block\";\n}\n\nfileInput.addEventListener(\"change\", (e) => {\n  const allTables = document.querySelectorAll(\"table\");\n  allTables.forEach((table) => table.remove());\n\n  const files = e.target.files;\n  if (files[0]) {\n    const file = files[0];\n    const fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      const data = e.target.result;\n      const xlsxReaderResult = XLSX.read(data, { type: \"binary\" });\n      renderTable(xlsxReaderResult);\n    };\n\n    fileReader.readAsBinaryString(file);\n  }\n});\n\ncheckbox.addEventListener(\"change\", (e) => {\n  if (e.target.checked) {\n    beforeTable.style.display = \"table\";\n  } else {\n    beforeTable.style.display = \"none\";\n  }\n});\n\nexportResultTableBtn.addEventListener(\"click\", () => {\n  var wb = XLSX.utils.table_to_book(afterTable, { sheet: \"export\" });\n  XLSX.writeFile(wb, \"export.xlsx\");\n});\n"]}